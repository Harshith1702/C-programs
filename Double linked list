#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node*next;
	struct node*prev;
};
struct node*head=NULL;
void insertionatend(int data){
	struct node *newnode,*temp;
	newnode=(struct node*)malloc(1*sizeof(struct node));
	newnode->data=data;
	newnode->prev=NULL;
	newnode->next=NULL;
	if(head==NULL)
	head=newnode;
	else{
	temp=head;
	while(temp->next!=NULL){
		temp=temp->next;
	}
	temp->next=newnode;
	newnode->prev=temp;
    }
}

void insertionatbeg(int data){
	struct node*newnode;
	newnode=(struct node*)malloc(1*sizeof(struct node));
	newnode->data=data;
	newnode->prev=NULL;
	newnode->next=NULL;
	if(head==NULL)
	head=newnode;
	else{
		head->prev=newnode;
		newnode->next=head;
		head=newnode;
	}
}

void insertionatpos(int data,int pos){
	struct node *newnode,*temp;
	newnode=(struct node*)malloc(1*sizeof(struct node));
	newnode->data=data;
	newnode->next=NULL;
	temp=head;
	while(pos-2){
		temp=temp->next;
		pos--;
	}
	newnode->next=temp->next;
	newnode->prev=temp;
	temp->next->prev=newnode;
	temp->next=newnode;
}

void deletionatend(){
	struct node *temp,*delnode;
	temp=head;
	if(head==NULL)
	printf("No node to delete");
	else if(head->next==NULL){
		delnode=head;
		head=NULL;
		free(delnode);
	}
	else{
		while(temp->next->next!=NULL){
			temp=temp->next;
		}
		delnode=temp->next;
		temp->next=NULL;
		free(delnode);
	}
}

void deletionatbeg(){
	struct node *temp,*delnode;
	temp=head;
	if(head==NULL)
	printf("No node to delete");
	else if(head->next==NULL){
		delnode=head;
		head=NULL;
		free(delnode);
	}
	else{
		delnode=head;
		head=head->next;
		head->prev=NULL;
		free(delnode);
	}
}

void deletionatpos(int pos){
	struct node *temp,*delnode;
	temp=head;
	while(pos-2){
		temp=temp->next;
		pos--;
	}
	delnode=temp->next;
	temp->next=temp->next->next;
	temp->next->prev=temp;
	free(delnode);
}

void display(){
	struct node*temp;
	temp=head;
	while(temp->next!=NULL){
		printf("%d==>",temp->data);
		temp=temp->next;
	}
	printf("%d\n",temp->data);
}

int main(){
	printf("Enter 1 to insert at ending");
	printf("\nEnter 2 to insert at beginning");
	printf("\nEnter 3 to enter at particular position");
	printf("\nEnter 4 to delete at ending");
	printf("\nEnter 5 to delete at beginning");
	printf("\nEnter 6 to delete at position");
	printf("\nEnter 7 to delete at particular position");
	printf("\nEnter 8 to exit");
	int n,data,pos;
	printf("\nEnter your choice ");
	scanf("%d",&n);
	while(n!=8){
	switch(n){
		case 1:
			{
			 printf("Enter the data ");
			 scanf("%d",&data);
			 insertionatend(data);
			 printf("%d is inserted at end",data);
			 break;
			}
		case 2:
		    {
		    	printf("Enter the data ");
		    	scanf("%d",&data);
		    	insertionatbeg(data);
		    	printf("%d is inserted at beginning",data);
		    	break;
			}	
		case 3:
			{
				printf("Enter the data and position");
				scanf("%d%d",&data,&pos);
				insertionatpos(data,pos);
				printf("%d is inserted at position %d",data,pos);
				break;
			}
		case 4:
			{
				deletionatend();
				printf("Value deleted at end");
				break;
			}
		case 5:
			{
				deletionatbeg();
				printf("Value deleted at beginning");
				break;
			}
		case 6:
			{
				printf("Enter the position ");
				scanf("%d",&pos);
				deletionatpos(pos);
				printf("Value deleted at position %d",pos);
				break;
			}
		case 7:
			{
				printf("The linked list is ");
				display();
				break;
			}
		default:
			{
				printf("Enter valid input");
				break;
			}
			}
			printf("\nEnter your choice ");
			scanf("%d",&n);
		}
		printf("Program terminated ");
		returnÂ 0;
	}
